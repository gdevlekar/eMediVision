<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jycQzyU+SJ6sihLTmbmrxKkwxujSZREGzU5MGzTJhsbNoAJCrmVsQse1tsmm6RMomIXbNreIuUzMpxEL
        JYBlbgVMT3RNK98TBkQb9qrmU4hWoZct/wB9amJ5ExmVphGO1sv9EzyRpjK3ZDFa2V1OeRjmtlizNhkk
        STC+CIG9womSIWww3OfBTMkUrpIBisMgkTyJp5r8DL2w+tRmU4hifBY2U6kaWSaAZWHJRFSZpUnhAtYJ
        Eomlh2atlGDZpkwzxcQs2jZQEBBRwQYyxEKYFJgwIAYhhlChKhaOKC5Bic1ShTAhgwIYMCGFzm5BQLcC
        kXPZdBUjhyUJUey6lCrm5hQkw53QUwZ3RCj25qRWNqCoFgoSEZ3QUMealGFbZqEqtH1QUtcIhZgUmDAh
        hc1uahLIgICAgIKWQLIFkCyBZAsgWQLIFkCyCqClkFUFLIKoCAgIKWQVQEBAQECyAgpZAsgqgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA
        gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIP/2Q==
</value>
  </data>
</root>